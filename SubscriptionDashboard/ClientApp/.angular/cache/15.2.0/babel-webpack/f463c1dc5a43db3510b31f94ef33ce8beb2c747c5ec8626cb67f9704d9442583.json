{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCardModule } from '@angular/material/card';\nimport { SubscriptionType } from 'src/app/core/models/contract';\nimport { PackageType } from 'src/app/core/models/package';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/divider\";\nimport * as i4 from \"@angular/material/card\";\nfunction SubscriptionsComponent_mat_card_content_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card-content\")(1, \"p\", 2);\n    i0.ɵɵlistener(\"click\", function SubscriptionsComponent_mat_card_content_4_Template_p_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const subscription_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.modifyQuery(subscription_r1.subscriptionId));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"mat-divider\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const subscription_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", subscription_r1.subscriptionId, \" \");\n  }\n}\nexport class SubscriptionsComponent {\n  constructor(router) {\n    this.router = router;\n    this.subscriptions = [{\n      subscriptionId: 15467,\n      subscriptionName: 'Basic Subscription',\n      subscriptionType: SubscriptionType.Personal,\n      packages: [{\n        id: 11,\n        type: PackageType.Basic,\n        name: 'Personal Package',\n        totalAmount: 100,\n        usedAmount: 6\n      }, {\n        id: 12,\n        type: PackageType.Premium,\n        name: 'Personal Package',\n        totalAmount: 100,\n        usedAmount: 27\n      }]\n    }, {\n      subscriptionId: 27878,\n      subscriptionName: 'Premium Subscription',\n      subscriptionType: SubscriptionType.Enterprise,\n      packages: [{\n        id: 21,\n        type: PackageType.Premium,\n        name: 'Personal Package',\n        totalAmount: 100,\n        usedAmount: 77\n      }]\n    }, {\n      subscriptionId: 3555544,\n      subscriptionName: 'Basic Subscription',\n      subscriptionType: SubscriptionType.Business,\n      packages: [{\n        id: 31,\n        type: PackageType.Premium,\n        name: 'Personal Package',\n        totalAmount: 100,\n        usedAmount: 50\n      }]\n    }];\n  }\n  trackBySubscriptionId(index, subscription) {\n    return subscription.subscriptionId;\n  }\n  modifyQuery(id) {\n    this.router.navigate([], {\n      queryParams: {\n        id\n      },\n      queryParamsHandling: 'merge'\n    });\n  }\n}\nSubscriptionsComponent.ɵfac = function SubscriptionsComponent_Factory(t) {\n  return new (t || SubscriptionsComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nSubscriptionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SubscriptionsComponent,\n  selectors: [[\"app-subscriptions\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"subscriptions\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"subscription\", 3, \"click\"]],\n  template: function SubscriptionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-header\")(2, \"mat-card-title\");\n      i0.ɵɵtext(3, \"Subscriptions\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(4, SubscriptionsComponent_mat_card_content_4_Template, 4, 1, \"mat-card-content\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.subscriptions)(\"ngForTrackBy\", ctx.trackBySubscriptionId);\n    }\n  },\n  dependencies: [CommonModule, i2.NgForOf, MatDividerModule, i3.MatDivider, MatCardModule, i4.MatCard, i4.MatCardContent, i4.MatCardHeader, i4.MatCardTitle],\n  styles: [\".subscriptions[_ngcontent-%COMP%] {\\r\\n  margin: 0.5rem;\\r\\n}\\r\\n\\r\\n.subscription[_ngcontent-%COMP%] {\\r\\n  padding: 0.5rem 0 0;\\r\\n  margin: 0.5rem 0;\\r\\n}\\r\\n\\r\\n.subscription[_ngcontent-%COMP%]:hover {\\r\\n  cursor: pointer;\\r\\n  background-color: #F6F6F6;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9kYXNoYm9hcmQvc2lkZS1uYXYvc3Vic2NyaXB0aW9ucy9zdWJzY3JpcHRpb25zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGVBQWU7RUFDZix5QkFBeUI7QUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIuc3Vic2NyaXB0aW9ucyB7XHJcbiAgbWFyZ2luOiAwLjVyZW07XHJcbn1cclxuXHJcbi5zdWJzY3JpcHRpb24ge1xyXG4gIHBhZGRpbmc6IDAuNXJlbSAwIDA7XHJcbiAgbWFyZ2luOiAwLjVyZW0gMDtcclxufVxyXG5cclxuLnN1YnNjcmlwdGlvbjpob3ZlciB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNGNkY2RjY7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAAoBC,gBAAgB,QAAQ,8BAA8B;AAC1E,SAASC,WAAW,QAAQ,6BAA6B;;;;;;;;;ICAvDC,wCAEC;IACyBA;MAAA;MAAA;MAAA;MAAA,OAASA,iEAAwC;IAAA,EAAC;IACxEA,YACF;IAAAA,iBAAI;IACJA,8BAA2B;IAC7BA,iBAAmB;;;;IAHfA,eACF;IADEA,+DACF;;;ADKJ,OAAM,MAAOC,sBAAsB;EACjCC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAC1B,kBAAa,GAAgB,CAC3B;MACEC,cAAc,EAAE,KAAK;MACrBC,gBAAgB,EAAE,oBAAoB;MACtCC,gBAAgB,EAAER,gBAAgB,CAACS,QAAQ;MAC3CC,QAAQ,EAAE,CACR;QACEC,EAAE,EAAE,EAAE;QACNC,IAAI,EAAEX,WAAW,CAACY,KAAK;QACvBC,IAAI,EAAE,kBAAkB;QACxBC,WAAW,EAAE,GAAG;QAChBC,UAAU,EAAE;OACb,EACD;QACEL,EAAE,EAAE,EAAE;QACNC,IAAI,EAAEX,WAAW,CAACgB,OAAO;QACzBH,IAAI,EAAE,kBAAkB;QACxBC,WAAW,EAAE,GAAG;QAChBC,UAAU,EAAE;OACb;KAEJ,EACD;MACEV,cAAc,EAAE,KAAK;MACrBC,gBAAgB,EAAE,sBAAsB;MACxCC,gBAAgB,EAAER,gBAAgB,CAACkB,UAAU;MAC7CR,QAAQ,EAAE,CACR;QACEC,EAAE,EAAE,EAAE;QACNC,IAAI,EAAEX,WAAW,CAACgB,OAAO;QACzBH,IAAI,EAAE,kBAAkB;QACxBC,WAAW,EAAE,GAAG;QAChBC,UAAU,EAAE;OACb;KAEJ,EACD;MACEV,cAAc,EAAE,OAAO;MACvBC,gBAAgB,EAAE,oBAAoB;MACtCC,gBAAgB,EAAER,gBAAgB,CAACmB,QAAQ;MAC3CT,QAAQ,EAAE,CACR;QACEC,EAAE,EAAE,EAAE;QACNC,IAAI,EAAEX,WAAW,CAACgB,OAAO;QACzBH,IAAI,EAAE,kBAAkB;QACxBC,WAAW,EAAE,GAAG;QAChBC,UAAU,EAAE;OACb;KAEJ,CACF;EAnDoC;EAqDrCI,qBAAqB,CAACC,KAAa,EAAEC,YAAuB;IAC1D,OAAOA,YAAY,CAAChB,cAAc;EACpC;EAEAiB,WAAW,CAACZ,EAAU;IACpB,IAAI,CAACN,MAAM,CAACmB,QAAQ,CAAC,EAAE,EAAE;MACvBC,WAAW,EAAE;QAAEd;MAAE,CAAE;MACnBe,mBAAmB,EAAE;KACtB,CAAC;EACJ;;AA/DWvB,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCfnC/B,mCAAgC;MAEZA,6BAAa;MAAAA,iBAAiB;MAGhDA,iGAOmB;MACrBA,iBAAW;;;MAPkBA,eAAkB;MAAlBA,2CAAkB;;;iBDKnCL,YAAY,cAAEC,gBAAgB,iBAAEC,aAAa;EAAAmC;AAAA","names":["CommonModule","MatDividerModule","MatCardModule","SubscriptionType","PackageType","i0","SubscriptionsComponent","constructor","router","subscriptionId","subscriptionName","subscriptionType","Personal","packages","id","type","Basic","name","totalAmount","usedAmount","Premium","Enterprise","Business","trackBySubscriptionId","index","subscription","modifyQuery","navigate","queryParams","queryParamsHandling","selectors","standalone","features","decls","vars","consts","template","styles"],"sourceRoot":"","sources":["C:\\Users\\USER\\Desktop\\SubscriptionDashboard\\SubscriptionDashboard\\ClientApp\\src\\app\\modules\\dashboard\\side-nav\\subscriptions\\subscriptions.component.ts","C:\\Users\\USER\\Desktop\\SubscriptionDashboard\\SubscriptionDashboard\\ClientApp\\src\\app\\modules\\dashboard\\side-nav\\subscriptions\\subscriptions.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCardModule } from '@angular/material/card';\nimport { IContract, SubscriptionType } from 'src/app/core/models/contract';\nimport { PackageType } from 'src/app/core/models/package';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-subscriptions',\n  standalone: true,\n  imports: [CommonModule, MatDividerModule, MatCardModule],\n  templateUrl: './subscriptions.component.html',\n  styleUrls: ['./subscriptions.component.css'],\n})\nexport class SubscriptionsComponent {\n  constructor(private router: Router) {}\n  subscriptions: IContract[] = [\n    {\n      subscriptionId: 15467,\n      subscriptionName: 'Basic Subscription',\n      subscriptionType: SubscriptionType.Personal,\n      packages: [\n        {\n          id: 11,\n          type: PackageType.Basic,\n          name: 'Personal Package',\n          totalAmount: 100,\n          usedAmount: 6,\n        },\n        {\n          id: 12,\n          type: PackageType.Premium,\n          name: 'Personal Package',\n          totalAmount: 100,\n          usedAmount: 27,\n        },\n      ],\n    },\n    {\n      subscriptionId: 27878,\n      subscriptionName: 'Premium Subscription',\n      subscriptionType: SubscriptionType.Enterprise,\n      packages: [\n        {\n          id: 21,\n          type: PackageType.Premium,\n          name: 'Personal Package',\n          totalAmount: 100,\n          usedAmount: 77,\n        },\n      ],\n    },\n    {\n      subscriptionId: 3555544,\n      subscriptionName: 'Basic Subscription',\n      subscriptionType: SubscriptionType.Business,\n      packages: [\n        {\n          id: 31,\n          type: PackageType.Premium,\n          name: 'Personal Package',\n          totalAmount: 100,\n          usedAmount: 50,\n        },\n      ],\n    },\n  ];\n\n  trackBySubscriptionId(index: number, subscription: IContract): number {\n    return subscription.subscriptionId;\n  }\n\n  modifyQuery(id: number): void {\n    this.router.navigate([], {\n      queryParams: { id },\n      queryParamsHandling: 'merge',\n    });\n  }\n}\n","<mat-card class=\"subscriptions\">\n  <mat-card-header>\n    <mat-card-title>Subscriptions</mat-card-title>\n  </mat-card-header>\n\n  <mat-card-content\n    *ngFor=\"let subscription of subscriptions; trackBy: trackBySubscriptionId\"\n  >\n    <p class=\"subscription\" (click)=\"modifyQuery(subscription.subscriptionId)\">\n      {{ subscription.subscriptionId }}\n    </p>\n    <mat-divider></mat-divider>\n  </mat-card-content>\n</mat-card>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}