{"ast":null,"code":"import { inject } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nexport const tokenInterceptor = (req, next) => {\n  const authService = inject(AuthService);\n  const token = authService.accessToken;\n  if (token) {\n    req = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  return next(req);\n};","map":{"version":3,"mappings":"AAMA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAASC,WAAW,QAAQ,0BAA0B;AAGtD,OAAO,MAAMC,gBAAgB,GAAsB,CACjDC,GAAyB,EACzBC,IAAmB,KACe;EAClC,MAAMC,WAAW,GAAGL,MAAM,CAACC,WAAW,CAAC;EACvC,MAAMK,KAAK,GAAGD,WAAW,CAACE,WAAW;EACrC,IAAID,KAAK,EAAE;IACTH,GAAG,GAAGA,GAAG,CAACK,KAAK,CAAC;MACdC,UAAU,EAAE;QACVC,aAAa,EAAE,UAAUJ,KAAK;;KAEjC,CAAC;;EAGJ,OAAOF,IAAI,CAACD,GAAG,CAAC;AAClB,CAAC","names":["inject","AuthService","tokenInterceptor","req","next","authService","token","accessToken","clone","setHeaders","Authorization"],"sourceRoot":"","sources":["C:\\Users\\USER\\Desktop\\SubscriptionDashboard\\SubscriptionDashboard\\ClientApp\\src\\app\\core\\interceptors\\token.interceptor.ts"],"sourcesContent":["import {\r\n  HttpEvent,\r\n  HttpHandlerFn,\r\n  HttpInterceptorFn,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { inject } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport const tokenInterceptor: HttpInterceptorFn = (\r\n  req: HttpRequest<unknown>,\r\n  next: HttpHandlerFn\r\n): Observable<HttpEvent<unknown>> => {\r\n  const authService = inject(AuthService);\r\n  const token = authService.accessToken;\r\n  if (token) {\r\n    req = req.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  return next(req);\r\n};\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}