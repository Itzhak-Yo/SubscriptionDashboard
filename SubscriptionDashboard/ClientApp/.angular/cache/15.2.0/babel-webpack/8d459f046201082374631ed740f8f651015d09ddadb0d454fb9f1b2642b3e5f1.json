{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.isAuthenticated = true;\n  }\n  login(userId) {\n    this.isAuthenticated = true;\n  }\n  logout() {\n    this.isAuthenticated = false;\n  }\n  get isLoggedIn() {\n    return this.isAuthenticated;\n  }\n  get isNotLoggedIn() {\n    return !this.isAuthenticated;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)();\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,WAAW;EAHxBC;IAIU,oBAAe,GAAY,IAAI;;EAEvCC,KAAK,CAACC,MAAc;IAClB,IAAI,CAACC,eAAe,GAAG,IAAI;EAC7B;EAEAC,MAAM;IACJ,IAAI,CAACD,eAAe,GAAG,KAAK;EAC9B;EAEA,IAAIE,UAAU;IACZ,OAAO,IAAI,CAACF,eAAe;EAC7B;EAEA,IAAIG,aAAa;IACf,OAAO,CAAC,IAAI,CAACH,eAAe;EAC9B;;AAjBWJ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAQ,SAAXR,WAAW;EAAAS,YAFV;AAAM","names":["AuthService","constructor","login","userId","isAuthenticated","logout","isLoggedIn","isNotLoggedIn","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\USER\\Desktop\\SubscriptionDashboard\\SubscriptionDashboard\\ClientApp\\src\\app\\core\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  private isAuthenticated: boolean = true;\r\n\r\n  login(userId: string) {\r\n    this.isAuthenticated = true;\r\n  }\r\n\r\n  logout() {\r\n    this.isAuthenticated = false;\r\n  }\r\n\r\n  get isLoggedIn(): boolean {\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  get isNotLoggedIn(): boolean {\r\n    return !this.isAuthenticated;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}