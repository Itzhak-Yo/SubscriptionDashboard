{"ast":null,"code":"import { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { provideRouter } from '@angular/router';\nimport { AppComponent } from './app/app.component';\nimport { routes } from './app/app.routes';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { provideHttpClient, withInterceptors } from '@angular/common/http';\nimport { tokenInterceptor } from './app/core/interceptors/token.interceptor';\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\nconst providers = [{\n  provide: 'BASE_URL',\n  useFactory: getBaseUrl,\n  deps: []\n}];\nif (environment.production) {\n  enableProdMode();\n}\nbootstrapApplication(AppComponent, {\n  providers: [provideRouter(routes), provideAnimations(), provideHttpClient(withInterceptors([tokenInterceptor]))]\n}).catch(err => console.error(err));","map":{"version":3,"mappings":"AAAA,SAASA,cAAc,QAAQ,eAAe;AAC9C,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,iBAAiB,QAAQ,sCAAsC;AACxE,SAASC,iBAAiB,EAAEC,gBAAgB,QAAQ,sBAAsB;AAC1E,SAASC,gBAAgB,QAAQ,2CAA2C;AAE5E,OAAM,SAAUC,UAAU;EACxB,OAAOC,QAAQ,CAACC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI;AACtD;AAEA,MAAMC,SAAS,GAAG,CAAC;EAAEC,OAAO,EAAE,UAAU;EAAEC,UAAU,EAAEN,UAAU;EAAEO,IAAI,EAAE;AAAE,CAAE,CAAC;AAE7E,IAAIhB,WAAW,CAACiB,UAAU,EAAE;EAC1BlB,cAAc,EAAE;;AAGlBE,oBAAoB,CAACE,YAAY,EAAE;EACjCU,SAAS,EAAE,CACTX,aAAa,CAACE,MAAM,CAAC,EACrBC,iBAAiB,EAAE,EACnBC,iBAAiB,CAACC,gBAAgB,CAAC,CAACC,gBAAgB,CAAC,CAAC,CAAC;CAE1D,CAAC,CAACU,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC","names":["enableProdMode","environment","bootstrapApplication","provideRouter","AppComponent","routes","provideAnimations","provideHttpClient","withInterceptors","tokenInterceptor","getBaseUrl","document","getElementsByTagName","href","providers","provide","useFactory","deps","production","catch","err","console","error"],"sourceRoot":"","sources":["C:\\Users\\USER\\Desktop\\SubscriptionDashboard\\SubscriptionDashboard\\ClientApp\\src\\main.ts"],"sourcesContent":["import { enableProdMode } from '@angular/core';\r\nimport { environment } from './environments/environment';\r\nimport { bootstrapApplication } from '@angular/platform-browser';\r\nimport { provideRouter } from '@angular/router';\r\nimport { AppComponent } from './app/app.component';\r\nimport { routes } from './app/app.routes';\r\nimport { provideAnimations } from '@angular/platform-browser/animations';\r\nimport { provideHttpClient, withInterceptors } from '@angular/common/http';\r\nimport { tokenInterceptor } from './app/core/interceptors/token.interceptor';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [{ provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nbootstrapApplication(AppComponent, {\r\n  providers: [\r\n    provideRouter(routes),\r\n    provideAnimations(),\r\n    provideHttpClient(withInterceptors([tokenInterceptor])),\r\n  ],\r\n}).catch((err) => console.error(err));\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}