{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { AuthService } from '../services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nfunction LoginComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"User ID is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" User ID must be a 9-digit number. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder, authService, router) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      userId: ['', [Validators.required, Validators.pattern(/^[0-9]{9}$/)]]\n    });\n  }\n  get userId() {\n    return this.loginForm.get('userId');\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.authService.login(this.userId?.value);\n      this.router.navigate(['/dashboard'], {\n        queryParams: {\n          userId: this.loginForm.get('userId')?.value\n        }\n      });\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  standalone: true,\n  features: [i0.ɵɵProvidersFeature([AuthService]), i0.ɵɵStandaloneFeature],\n  decls: 11,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"matInput\", \"\", \"formControlName\", \"userId\"], [4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"h3\");\n      i0.ɵɵtext(2, \"Welcome, please enter your ID:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"mat-form-field\")(4, \"mat-label\");\n      i0.ɵɵtext(5, \"User ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 1);\n      i0.ɵɵtemplate(7, LoginComponent_mat_error_7_Template, 2, 0, \"mat-error\", 2);\n      i0.ɵɵtemplate(8, LoginComponent_mat_error_8_Template, 2, 0, \"mat-error\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 3);\n      i0.ɵɵtext(10, \" Login \");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.userId == null ? null : ctx.userId.errors == null ? null : ctx.userId.errors.required);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.userId == null ? null : ctx.userId.errors == null ? null : ctx.userId.errors.pattern);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [CommonModule, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, MatButtonModule, i5.MatButton, MatInputModule, i6.MatInput, i7.MatFormField, i7.MatLabel, i7.MatError, MatFormFieldModule],\n  styles: [\"[_nghost-%COMP%] {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  height: 100%;\\r\\n  margin-top: 3rem;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  width: 300px;\\r\\n}\\r\\n\\r\\nmat-form-field[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\nbutton[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29yZS9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsV0FBVztBQUNiIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgbWFyZ2luLXRvcDogM3JlbTtcclxufVxyXG5cclxuZm9ybSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgd2lkdGg6IDMwMHB4O1xyXG59XHJcblxyXG5tYXQtZm9ybS1maWVsZCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxuYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0ge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAGEC,mBAAmB,EACnBC,UAAU,QACL,gBAAgB;AACvB,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,WAAW,QAAQ,0BAA0B;;;;;;;;;;;ICNlDC,iCAA4C;IAAAA,oCAAoB;IAAAA,iBAAY;;;;;IAC5EA,iCAA2C;IACzCA,mDACF;IAAAA,iBAAY;;;ADoBhB,OAAM,MAAOC,cAAc;EAGzBC,YACUC,WAAwB,EACxBC,WAAwB,EACxBC,MAAc;IAFd,gBAAW,GAAXF,WAAW;IACX,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;EACb;EAEHC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACtCC,MAAM,EAAE,CAAC,EAAE,EAAE,CAACd,UAAU,CAACe,QAAQ,EAAEf,UAAU,CAACgB,OAAO,CAAC,YAAY,CAAC,CAAC;KACrE,CAAC;EACJ;EAEA,IAAIF,MAAM;IACR,OAAO,IAAI,CAACF,SAAS,CAACK,GAAG,CAAC,QAAQ,CAAC;EACrC;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACN,SAAS,CAACO,KAAK,EAAE;MACxB,IAAI,CAACV,WAAW,CAACW,KAAK,CAAC,IAAI,CAACN,MAAM,EAAEO,KAAK,CAAC;MAC1C,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE;QACnCC,WAAW,EAAE;UAAET,MAAM,EAAE,IAAI,CAACF,SAAS,CAACK,GAAG,CAAC,QAAQ,CAAC,EAAEI;QAAK;OAC3D,CAAC;;EAEN;;AA1BWf,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAkB;EAAAC;EAAAC,iCAJd,CAACtB,WAAW,CAAC;EAAAuB;EAAAC;EAAAC;EAAAC;IAAA;MCxB1BzB,+BAAsD;MAAxBA;QAAA,OAAY0B,cAAU;MAAA,EAAC;MACnD1B,0BAAI;MAAAA,8CAA8B;MAAAA,iBAAK;MACvCA,sCAAgB;MACHA,uBAAO;MAAAA,iBAAY;MAC9BA,2BAA2C;MAC3CA,2EAA4E;MAC5EA,2EAEY;MACdA,iBAAiB;MACjBA,iCAKC;MACCA,wBACF;MAAAA,iBAAS;;;MAjBLA,yCAAuB;MAKbA,eAA8B;MAA9BA,gHAA8B;MAC9BA,eAA6B;MAA7BA,+GAA6B;MAQzCA,eAA8B;MAA9BA,gDAA8B;;;iBDI9BP,YAAY,WACZC,mBAAmB,qIACnBI,eAAe,gBACfD,cAAc,0DACdD,kBAAkB;EAAA+B;AAAA","names":["CommonModule","ReactiveFormsModule","Validators","MatFormFieldModule","MatInputModule","MatButtonModule","AuthService","i0","LoginComponent","constructor","formBuilder","authService","router","ngOnInit","loginForm","group","userId","required","pattern","get","onSubmit","valid","login","value","navigate","queryParams","selectors","standalone","features","decls","vars","consts","template","ctx","styles"],"sourceRoot":"","sources":["C:\\Users\\USER\\Desktop\\SubscriptionDashboard\\SubscriptionDashboard\\ClientApp\\src\\app\\core\\login\\login.component.ts","C:\\Users\\USER\\Desktop\\SubscriptionDashboard\\SubscriptionDashboard\\ClientApp\\src\\app\\core\\login\\login.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n  ],\n  providers: [AuthService],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      userId: ['', [Validators.required, Validators.pattern(/^[0-9]{9}$/)]],\n    });\n  }\n\n  get userId() {\n    return this.loginForm.get('userId');\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      this.authService.login(this.userId?.value);\n      this.router.navigate(['/dashboard'], {\n        queryParams: { userId: this.loginForm.get('userId')?.value },\n      });\n    }\n  }\n}\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n  <h3>Welcome, please enter your ID:</h3>\n  <mat-form-field>\n    <mat-label>User ID</mat-label>\n    <input matInput formControlName=\"userId\" />\n    <mat-error *ngIf=\"userId?.errors?.required\">User ID is required.</mat-error>\n    <mat-error *ngIf=\"userId?.errors?.pattern\">\n      User ID must be a 9-digit number.\n    </mat-error>\n  </mat-form-field>\n  <button\n    mat-raised-button\n    color=\"primary\"\n    type=\"submit\"\n    [disabled]=\"loginForm.invalid\"\n  >\n    Login\n  </button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}