{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nfunction LoginComponent_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"json\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx_r0.userId.errors));\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder, authService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      userId: ['', [Validators.required, Validators.pattern(/^\\d+$/)]]\n    });\n  }\n  get userId() {\n    return this.loginForm.get('userId');\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.authService.login(this.userId?.value);\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 8,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"matInput\", \"\", \"formControlName\", \"userId\"], [4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"mat-form-field\")(2, \"mat-label\");\n      i0.ɵɵtext(3, \"User ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 1);\n      i0.ɵɵtemplate(5, LoginComponent_mat_error_5_Template, 3, 3, \"mat-error\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 3);\n      i0.ɵɵtext(7, \" Login \");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.userId.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [CommonModule, i3.NgIf, i3.JsonPipe, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, MatButtonModule, i4.MatButton, MatInputModule, i5.MatInput, i6.MatFormField, i6.MatLabel, i6.MatError, MatFormFieldModule],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAGEC,mBAAmB,EACnBC,UAAU,QACL,gBAAgB;AACvB,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,eAAe,QAAQ,0BAA0B;;;;;;;;;;ICNtDC,iCAAkC;IAAAA,YAA0B;;IAAAA,iBAAY;;;;IAAtCA,eAA0B;IAA1BA,gEAA0B;;;ADsBhE,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,WAAwB,EAAUC,WAAwB;IAA1D,gBAAW,GAAXD,WAAW;IAAuB,gBAAW,GAAXC,WAAW;EAAiB;EAElFC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACtCC,MAAM,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACc,OAAO,CAAC,OAAO,CAAC,CAAC;KAChE,CAAC;EACJ;EAEA,IAAIF,MAAM;IACR,OAAO,IAAI,CAACF,SAAS,CAACK,GAAG,CAAC,QAAQ,CAAC;EACrC;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACN,SAAS,CAACO,KAAK,EAAE;MACxB,IAAI,CAACT,WAAW,CAACU,KAAK,CAAC,IAAI,CAACN,MAAM,EAAEO,KAAK,CAAC;;EAE9C;;AAnBWd,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MC1B3BtB,+BAAsD;MAAxBA;QAAA,OAAYuB,cAAU;MAAA,EAAC;MACnDvB,sCAAgB;MACHA,uBAAO;MAAAA,iBAAY;MAC9BA,2BAA2C;MAC3CA,2EAAwE;MAC1EA,iBAAiB;MACjBA,iCAKC;MACCA,uBACF;MAAAA,iBAAS;;;MAbLA,yCAAuB;MAIbA,eAAoB;MAApBA,yCAAoB;MAMhCA,eAA8B;MAA9BA,gDAA8B;;;iBDO9BN,YAAY,wBACZC,mBAAmB,qIACnBI,eAAe,gBACfD,cAAc,0DACdD,kBAAkB;EAAA2B;AAAA","names":["CommonModule","ReactiveFormsModule","Validators","MatFormFieldModule","MatInputModule","MatButtonModule","i0","LoginComponent","constructor","formBuilder","authService","ngOnInit","loginForm","group","userId","required","pattern","get","onSubmit","valid","login","value","selectors","standalone","features","decls","vars","consts","template","ctx","styles"],"sourceRoot":"","sources":["C:\\Users\\USER\\Desktop\\SubscriptionDashboard\\SubscriptionDashboard\\ClientApp\\src\\app\\core\\login\\login.component.ts","C:\\Users\\USER\\Desktop\\SubscriptionDashboard\\SubscriptionDashboard\\ClientApp\\src\\app\\core\\login\\login.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n  ],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      userId: ['', [Validators.required, Validators.pattern(/^\\d+$/)]]\n    });\n  }\n\n  get userId() {\n    return this.loginForm.get('userId');\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      this.authService.login(this.userId?.value);\n    }\n  }\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n  <mat-form-field>\n    <mat-label>User ID</mat-label>\n    <input matInput formControlName=\"userId\" />\n    <mat-error *ngIf=\"userId.invalid\">{{ userId.errors | json }}</mat-error>\n  </mat-form-field>\n  <button\n    mat-raised-button\n    color=\"primary\"\n    type=\"submit\"\n    [disabled]=\"loginForm.invalid\"\n  >\n    Login\n  </button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}