{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { PackageComponent } from './package/package.component';\nimport { SideNavComponent } from './side-nav/side-nav.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nfunction DashboardComponent_section_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 3);\n    i0.ɵɵelement(1, \"app-package\")(2, \"app-package\")(3, \"app-package\")(4, \"app-package\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"please select subscriptionId from the navigation bar\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class DashboardComponent {\n  constructor(route) {\n    this.route = route;\n  }\n  ngOnInit() {\n    this.route.queryParamMap.subscribe(params => {\n      this.subscriptionId = params.get('subscriptionId');\n      if (this.subscriptionId) {\n        // call to api to get all packages based on subscriptionId\n      }\n    });\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 6,\n  vars: 2,\n  consts: [[1, \"wrapper\"], [\"class\", \"packages\", 4, \"ngIf\", \"ngIfElse\"], [\"noSubscriptionId\", \"\"], [1, \"packages\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"app-side-nav\");\n      i0.ɵɵtemplate(2, DashboardComponent_section_2_Template, 5, 0, \"section\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(3, \" <\");\n      i0.ɵɵtemplate(4, DashboardComponent_ng_template_4_Template, 2, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(5);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.subscriptionId)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [CommonModule, i2.NgIf, PackageComponent, SideNavComponent],\n  styles: [\".packages[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  max-width: 1000px;\\r\\n}\\r\\n\\r\\n.wrapper[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  justify-content: center;\\r\\n  margin-top: 3rem;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsZUFBZTtFQUNmLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixlQUFlO0VBQ2YsdUJBQXVCO0VBQ3ZCLGdCQUFnQjtBQUNsQiIsInNvdXJjZXNDb250ZW50IjpbIi5wYWNrYWdlcyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgbWF4LXdpZHRoOiAxMDAwcHg7XHJcbn1cclxuXHJcbi53cmFwcGVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBtYXJnaW4tdG9wOiAzcmVtO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,gBAAgB,QAAQ,+BAA+B;;;;;;ICD9DC,kCAAwE;IACtEA,8BAA2B;IAI7BA,iBAAU;;;;;IAIVA,yBAAG;IAAAA,oEAAoD;IAAAA,iBAAI;;;ADE7D,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,KAAqB;IAArB,UAAK,GAALA,KAAK;EAAmB;EAE5CC,QAAQ;IACN,IAAI,CAACD,KAAK,CAACE,aAAa,CAACC,SAAS,CAAEC,MAAM,IAAI;MAC5C,IAAI,CAACC,cAAc,GAAGD,MAAM,CAACE,GAAG,CAAC,gBAAgB,CAAC;MAClD,IAAI,IAAI,CAACD,cAAc,EAAE;QACvB;MAAA;IAEJ,CAAC,CAAC;EACJ;;AAXWP,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb/BhB,8BAAqB;MACnBA,+BAA6B;MAC7BA,2EAKU;MACZA,iBAAM;MAENA,kBAAC;MAAAA,oHAEa;;;;MAVeA,eAAsB;MAAtBA,yCAAsB;;;iBDOvCH,YAAY,WAAEC,gBAAgB,EAAEC,gBAAgB;EAAAkB;AAAA","names":["CommonModule","PackageComponent","SideNavComponent","i0","DashboardComponent","constructor","route","ngOnInit","queryParamMap","subscribe","params","subscriptionId","get","selectors","standalone","features","decls","vars","consts","template","styles"],"sourceRoot":"","sources":["C:\\Users\\USER\\Desktop\\SubscriptionDashboard\\SubscriptionDashboard\\ClientApp\\src\\app\\modules\\dashboard\\dashboard.component.ts","C:\\Users\\USER\\Desktop\\SubscriptionDashboard\\SubscriptionDashboard\\ClientApp\\src\\app\\modules\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PackageComponent } from './package/package.component';\nimport { SideNavComponent } from './side-nav/side-nav.component';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [CommonModule, PackageComponent, SideNavComponent],\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent implements OnInit {\n  subscriptionId: string | null | undefined;\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.route.queryParamMap.subscribe((params) => {\n      this.subscriptionId = params.get('subscriptionId');\n      if (this.subscriptionId) {\n        // call to api to get all packages based on subscriptionId\n      }\n    });\n  }\n}\n","<div class=\"wrapper\">\n  <app-side-nav></app-side-nav>\n  <section class=\"packages\" *ngIf=\"subscriptionId; else noSubscriptionId\">\n    <app-package></app-package>\n    <app-package></app-package>\n    <app-package></app-package>\n    <app-package></app-package>\n  </section>\n</div>\n\n<<ng-template #noSubscriptionId>\n  <p>please select subscriptionId from the navigation bar</p>\n</ng-template>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}